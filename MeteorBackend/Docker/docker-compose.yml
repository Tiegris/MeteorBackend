version: '3.4'

services:
  apigateway:
    image: traefik:v2.2.1
    ports:
      - 443:443
      - 80:80
      - 8080:8080
    command:
      # default
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- "https-data:/acme.json"
    networks:
      - meteor-network

  schemes:
    image: "schemes:latest"
    build:
      context: ..
      dockerfile: Schemes/Schemes.Api/Dockerfile
    networks:
      - meteor-network
    depends_on:
      - mysql
      - redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.schemes.rule=PathPrefix(`/api/schemes`)
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth/api/auth" 
      - "traefik.http.routers.schemes.middlewares=auth@docker"

  upload:
    image: "upload:latest"
    build:
      context: ..
      dockerfile: Upload/Docker/Dockerfile
    networks:
      - meteor-network
    depends_on:
      - mongodb
    labels:
      - traefik.enable=true
      - traefik.http.routers.upload.rule=PathPrefix(`/api/upload`)
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth/api/auth" 
      - "traefik.http.routers.upload.middlewares=auth@docker"

  auth:
    image: "auth:latest"
    build:
      context: ..
      dockerfile: Auth/Docker/Dockerfile
    networks:
      - meteor-network
    labels:
      - "traefik.http.routers.auth.rule=PathPrefix(`/api/auth`)"
      - "traefik.http.middlewares.auth.forwardauth.address=http://users/api/auth"

  web:
    image: "web:latest"
    build:
      context: ..
      dockerfile: Web/Docker/Dockerfile
    networks:
      - meteor-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=PathPrefix(`/`)

  mysql:
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: alma
    networks:
      - meteor-network
    volumes:
      - meteor-sql-data:/var/lib/mysql

  mongodb:
    image: mongo:4.2.8
    networks:
      - meteor-network
    volumes:
      - meteor-mongo-data:/data/db

  redis:
    image: redis:6.0.9-alpine
    networks:
      - meteor-network

volumes:
  meteor-sql-data:
    driver: local
  meteor-mongo-data:
    driver: local
  https-data:
    driver: local

networks:
  meteor-network:
    driver: bridge